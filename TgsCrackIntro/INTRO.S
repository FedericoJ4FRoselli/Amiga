;-------------------------------------------
; The Great Swappers Crack Intro
; Released at Lucyfer's home
;-------------------------------------------
ORG $35000			; CHARGE LE PROGRAMME
LOAD $35000			; EN RAM ($35000)

>EXTERN "FONTS",FONTIM
>EXTERN "TABLEXY",TABLEXY
>EXTERN "PICTURE",PICTURE
>EXTERN "MUSIQUE",MUSIC
BPL1=$60000			; ADRESSES DES

EXECBASE=4			; ADRESSE DE BASE DE EXEC.LIB
FORBID=-132			; OFFSET DE LA FONCTION ETEINDRE
PERMIT=-138			; ET REMETTRE LE MULTITACHES
OPENLIB=-552			; OFFSET OUVRIR ET
CLOSELIB=-414			; FERMER LES BIBLIOTHEQUES

R:				; ROUTINE A APPELER
MOVEM.L D0-D7/A0-A6,-(A7)
MOVE.L EXECBASE,A6		; ADR. DE BASE EXEC.LIB -> A6
JSR FORBID(A6)			; ETEINDS LE MULTITACHES

LEA GFXNAME,A1			; POINTE SUR LE NOM DE LA LIB
JSR OPENLIB(A6)			; OUVRE GRAPHICS.LIB
MOVE.L D0,GFXBASE		; SAUVE ADR/ DE BASE GFX.LIB

MOVE.L #BPL1,A3			; ADRESSE DU 1ER BITPLAN 
MOVE.L #44/4*300*5,D0		; TAILLE TOTALE ECRAN (BYTES*LIGNES)  
EFFACE:				; ROUTINE DE CLS
CLR.L (A3)+			; EFFACE ENDROIT ACTUEL
DBRA D0,EFFACE			; ENDROIT SUIVANT

MOVE.L GFXBASE,A0		; ADRESSE DE BASE GFX.LIB -> A0
MOVE.L $32(A0),OLDCOPPER	; SAUVE ANCIENNE COPPER-LIST
MOVE.L #NEWCOPPER,$32(A0)	; MET LA MIENNE

BSR.L START
BSR.L AFFICHE
BSR.L MONSTER
;-------------------
; ROUTINE PRINCIPALE
;-------------------
MAIN:
BSR.L FONT			; CHERCHE ET IMPRIME CARACTERE
MOVE.W  ESPACEMENT,D7		; SCROLL DE 'ESPACEMENT'
ESPACE:
CMP.B #70,$DFF006
BLO.S ESPACE
CMP.L #1,STOP2
BLO VASYDON
ADD.L #1,D7
BSR.L WAIT
SUB.L #1,STOP2
BRA NOSCROLL
VASYDON:
BSR.L SCROLL			; SCROLL LE TEXTE
NOSCROLL:
BSR.L BOUGE
BTST #6,$BFE001			; MOUSE DROIT -> QUITTE
BEQ.S FIN
DBRA D7,ESPACE			; SCROLL
BRA MAIN			; REPETE MAIN ROUTINE

;---------------------------------
; ROUTINE POUR TOUT REFERMER (FIN)
;---------------------------------

FIN:
MOVE.L GFXBASE,A0		; ADRESSE DE BASE GFX.LIB  ->A0
MOVE.L OLDCOPPER,$32(A0)	; RESTITUE L'ANCIENNE COPPER-LIST
MOVE.L EXECBASE,A6		; ADRESSE DE BASE EXEC.LIB -> A6
MOVE.L GFXBASE,A1		; ADRESSE DE BASE GFX.LIB  -> A1
JSR CLOSELIB(A6)		; FERME GFX.LIB
JSR PERMIT(A6)			; REMET LE MULTITACHES
BSR.L STOP
MOVEM.L (A7)+,D0-D7/A0-A6
RTS				; BYE BYE (MISTER D)

;----------------------------------------------------------------
;                          ROUTINES
;----------------------------------------------------------------

MONSTER:
LEA PICTURE,A0
LEA $600B0,A1
MOVE.L #4-1,D0
UNNOM:
BTST #14,$DFF002
BNE.S UNNOM
MOVE.L #$FFFFFFFF,$DFF044
MOVE.W #$09F0,$DFF040
CLR.W $DFF042
MOVE.W #$0000,$DFF064
MOVE.W #44-40,$DFF066
MOVE.L A0,$DFF050
MOVE.L A1,$DFF054
MOVE.W #$3B54,$DFF058
ADDA.L #40*237,A0
ADDA.L #$3390,A1
DBRA D0,UNNOM
RTS

WAIT:				; IF NO SCROLL THEN WAIT BITTESCHON
MOVE.L #950,D0
WI:
DBRA D0,WI
RTS

AFFICHE:
MOVE.L #$50000,A1
MOVE.L #$52C00,A0
MOVE.L #$55800,A3
MOVE.L #$58400,A4
MOVE.L #$5B000,A5
MOVE.L #$51600,A6
LEA SPRITE,A2
SPRLOOP:
MOVE.L (A2),(A1)+
MOVE.L (A2),(A0)+
MOVE.L (A2),(A3)+
MOVE.L (A2),(A4)+
MOVE.L (A2),(A5)+
MOVE.L (A2),(A6)+
CMP.L #$00000000,(A2)+
BNE SPRLOOP

MOVE.L #$57E00,A0
MOVE.L #$54200,A1
LEA SPRITE,A2
SPRLOOP2:
MOVE.L (A2),(A0)+
MOVE.L (A2),(A1)+
CMP.L #$00000000,(A2)+
BNE SPRLOOP2
RTS

BOUGE:
MOVE.L PTABLEXY,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$50001
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$50000
ADD.B #66,D1
MOVE.B D1,$50002

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$52C01
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$52C00
ADD.B #66,D1
MOVE.B D1,$52C02

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$55801
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$55800
ADD.B #66,D1
MOVE.B D1,$55802

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$58401
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$58400
ADD.B #66,D1
MOVE.B D1,$58402

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$5B001
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$5B000
ADD.B #66,D1
MOVE.B D1,$5B002

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$51601
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$51600
ADD.B #66,D1
MOVE.B D1,$51602

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$57E01
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$57E00
ADD.B #66,D1
MOVE.B D1,$57E02

ADD.L #32,A0
MOVE.B (A0)+,D0
ADD.B #13,D0
MOVE.B D0,$54201
MOVE.B (A0)+,D1
ADD.B #50,D1
MOVE.B D1,$54200
ADD.B #66,D1
MOVE.B D1,$54202

ADD.L #2,PTABLEXY
CMP.L #FINTABLEXY-192,A0
BLO.S OKMAN
LEA TABLEXY,A0
MOVE.L A0,PTABLEXY
OKMAN:
RTS

FONT:				; CHERCHE ET IMPRIME CARACTERE
LEA TABLE,A0			; ADRESSE DE LA TABLE ALPHABET -> A0
MOVE.L POINTEURTEXTE,A1		; ADRESSE POINTEUR DU SCROLL   -> A1
MOVE.B (A1),D1			; 1ER CARACTERE DU SCROLL      -> D1
CMP.B #"S",D1
BNE PASSTOP
MOVE.L #400,STOP2		; REGLAGE TEMPS DU STOP
ADD.L #1,POINTEURTEXTE
MOVE.B #" ",D1
BRA SPEEDMAN
PASSTOP:
CMP.B #"A",D1
BNE PAS2
MOVE.W #$F9F0,VITESSE
MOVE.W #15,ESPACEMENT
ADD.L #1,POINTEURTEXTE
BRA FONT
PAS2:
CMP.B #"B",D1
BNE SPEEDMAN
MOVE.W #$E9F0,VITESSE
MOVE.W #7,ESPACEMENT
ADD.L #1,POINTEURTEXTE
BRA FONT
SPEEDMAN:			; MON SPREADER (IMPORTANT ICI!)	
MOVE.W (A0),D0			; CARACTERE ALPHABET           -> D0
CMP.B D1,D0			; COMPARE D0 A D1 (2 LETTRES)
BEQ.S BLTGO			; MEMES LETTRES -> AFFICHE LETTRE
ADDQ.L #4,A0			; LETTRE ALPHABET SUIVANTE
BRA SPEEDMAN			; CHERCHE A NOUVEAU

BLTGO:
CLR.L D0			; EFFACE D0
ADDQ.L #1,POINTEURTEXTE		; LETTRE SCROLL SUIVANTE 
CMPA.L #FINTEXTE,A1		; DERNIERE LETTRE DU SCROLL ? 
BLO.S CESTPASFINI		; NON -> CESTPASFINI
MOVE.L #TEXTE,POINTEURTEXTE	; OUI -> REPOINTE SUR 1ERE LETTRE
BRA FONT			; ET REIMPRIME LETTRE
CESTPASFINI:			; (PAS DERNIERE LETTRE)
ADD.L #$2,A0
MOVE.W (A0),D0			; ADRESSE CARACTERE DANS L'IMAGE FONTE
ADD.L #FONTIM,D0		; + ADRESSE DE LA FONTE
MOVE.L #$62994,A1		; ADRESSE ECRAN DE LA DESTINATION

MOVE.L #2-1,D1			; COPIE LETTRE SUR 3 BITPLANS

COPYFONT:
BSR ATTENTE			; WAIT AND SEE
MOVE.L #$FFFFFFFF,$DFF044	; MASQUE A GAZ (MASK SOURCE A)
MOVE.W #$09F0,$DFF040		; BLTCON 0
MOVE.W #0000,$DFF042		; BLTCON 1
MOVE.W #0042,$DFF066		; MODULO D
MOVE.W #0038,$DFF064		; MODULO A
MOVE.L    D0,$DFF050		; SOURCE A
MOVE.L    A1,$DFF054		; DESTINATION D
MOVE.W  #$03C1,$DFF058		; BLTSIZE (32 lignes,2 mots)

ADD.L  #40*45,D0		; + TAILLE DESSIN
ADDA.L #$3390,A1		; + TAILLE ECRAN
DBRA D1,COPYFONT		; LES 3 BITPLANS
RTS

;---------------------
; ROUTINE DE SCROLLING
;---------------------

SCROLL:
LEA $6296C,A0			; ADRESSE SOURCE DE L'ECRAN
MOVE.L #4-1,D0			; TOUJOURS SUR 3 BITPLANS
RS:
BSR ATTENTE			; ATTENDS QUE LE BLITTER AIT FINI
MOVE.L #$FFFFFFFF,$DFF044	; MASK A
MOVE.W #$0000,$DFF066		; MODULO D
MOVE.W #$0000,$DFF064		; MODULO A
CLR.W $DFF042			; COPIE NORMALE SVP
MOVE.W VITESSE,$DFF040		; DECALE DE VITESSE (1-15) -> DROITE
MOVE.L A0,$DFF050		; SOURCE A
SUBQ.L #2,A0			; SCROLL DE 16 PIXELS <- GAUCHE
MOVE.L A0,$DFF054		; DESTINATION
MOVE.W #$03D6,$DFF058		; BLTSIZE
ADD.L #$3390,A0			; ADDITIONNE TAILLE BITPLAN
DBRA D0,RS
RTS

;-------------------
; ATTENTE DU BLITTER
;-------------------

ATTENTE:
BTST#14,$DFF002			; A-T-IL FINI ?
BNE.S ATTENTE			; NON !
RTS				; SI ! -> RETOUR

;================================================================
;                   >ROUTINE DE MUSIC PAR TNM<
;================================================================
START:	BSR.S	START_MUZAK
	RTS

STOP:	BSR.L	STOP_MUZAK
	MOVEQ	#0,D0
	RTS
START_MUZAK:
	MOVE.L	#MUSIC,MUZAKOFFSET	;** GET OFFSET
INIT0:	MOVE.L	MUZAKOFFSET,A0		;** GET HIGHEST USED PATTERN
	ADD.L	#472,A0
	MOVE.L	#$80,D0
	CLR.L	D1
INIT1:	MOVE.L	D1,D2
	SUBQ.W	#1,D0
INIT2:	MOVE.B	(A0)+,D1
	CMP.B	D2,D1
	BGT.S	INIT1
	DBF	D0,INIT2
	ADDQ.B	#1,D2
INIT3:	MOVE.L	MUZAKOFFSET,A0		;** CALC SAMPLEPOINTERS
	LEA	POINTERS(PC),A1
	LSL.L	#8,D2
	LSL.L	#2,D2
	ADD.L	#600,D2
	ADD.L	A0,D2
	MOVEQ	#14,D0
INIT4:	MOVE.L	D2,(A1)+
	CLR.L	D1
	MOVE.W	42(A0),D1
	LSL.L	#1,D1
	ADD.L	D1,D2
	ADD.L	#30,A0
	DBF	D0,INIT4
INIT5:	CLR.W	$DFF0A8			;** CLEAR USED VALUES
	CLR.W	$DFF0B8
	CLR.W	$DFF0C8
	CLR.W	$DFF0D8
	CLR.W	TIMPOS
	CLR.L	TRKPOS
	CLR.L	PATPOS
INIT6:	MOVE.L	MUZAKOFFSET,A0		;** INITIALIZE TIMER IRQ
	MOVE.B	470(A0),NUMPAT+1	;NUMBER OF PATTERNS
	MOVE.L	$6C.W,LEV3SAVE+2
	MOVE.L	#LEV3INTERRUPT,$6C.W
	RTS
STOP_MUZAK:
	MOVE.L	LEV3SAVE+2,$6C.W
	CLR.W	$DFF0A8
	CLR.W	$DFF0B8
	CLR.W	$DFF0C8
	CLR.W	$DFF0D8
	MOVE.W	#$F,$DFF096
	RTS
LEV3INTERRUPT:
	BSR.S	REPLAY_MUZAK
LEV3SAVE:
	JMP	$0
REPLAY_MUZAK:
	MOVEM.L	D0-D7/A0-A6,-(A7)
	ADDQ.W	#1,TIMPOS
SPEED:	CMP.W	#6,TIMPOS
	BEQ.L	REPLAYSTEP
CHANELEFFECTS:				;** SEEK EFFECTS
	LEA	DATACH0(PC),A6
	TST.B	3(A6)
	BEQ.S	CEFF1
	LEA	$DFF0A0,A5
	BSR.S	CEFF5
CEFF1:	LEA	DATACH1(PC),A6
	TST.B	3(A6)
	BEQ.S	CEFF2
	LEA	$DFF0B0,A5
	BSR.S	CEFF5
CEFF2:	LEA	DATACH2(PC),A6
	TST.B	3(A6)
	BEQ.S	CEFF3
	LEA	$DFF0C0,A5
	BSR.S	CEFF5
CEFF3:	LEA	DATACH3(PC),A6
	TST.B	3(A6)
	BEQ.S	CEFF4
	LEA	$DFF0D0,A5
	BSR.S	CEFF5
CEFF4:	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS
CEFF5:	MOVE.B	2(A6),D0		;ROOM FOR SOME MORE
	AND.B	#$F,D0			;IMPLEMENTATIONS BELOW
	TST.B	D0
	BEQ.S	ARPREGGIATO
	CMP.B	#1,D0
	BEQ.L	PITCHUP
	CMP.B	#2,D0
	BEQ.L	PITCHDOWN
	CMP.B	#12,D0
	BEQ.L	SETVOL
	CMP.B	#14,D0
	BEQ.L	SETFILT
	CMP.B	#15,D0
	BEQ.L	SETSPEED
	RTS
ARPREGGIATO:				;** SPREAD BY TIME
	CMP.W	#1,TIMPOS
	BEQ.S	ARP1
	CMP.W	#2,TIMPOS
	BEQ.S	ARP2
	CMP.W	#3,TIMPOS
	BEQ.S	ARP3
	CMP.W	#4,TIMPOS
	BEQ.S	ARP1
	CMP.W	#5,TIMPOS
	BEQ.S	ARP2
	RTS
ARP1:	CLR.L	D0			;** GET HIGHER NOTE-VALUES
	MOVE.B	3(A6),D0		;   OR PLAY ORIGINAL
	LSR.B	#4,D0
	BRA.S	ARP4
ARP2:	CLR.L	D0
	MOVE.B	3(A6),D0
	AND.B	#$F,D0
	BRA.S	ARP4
ARP3:	MOVE.W	16(A6),D2
	BRA.S	ARP6
ARP4:	LSL.W	#1,D0
	CLR.L	D1
	MOVE.W	16(A6),D1
	LEA	NOTETABLE,A0
ARP5:	MOVE.W	(A0,D0.W),D2
	CMP.W	(A0),D1
	BEQ.S	ARP6
	ADDQ.L	#2,A0
	BRA.S	ARP5
ARP6:	MOVE.W	D2,6(A5)
	RTS
PITCHDOWN:
	BSR.S	NEWROU
	CLR.L	D0
	MOVE.B	3(A6),D0
	AND.B	#$F,D0
	ADD.W	D0,(A4)
	CMP.W	#$358,(A4)
	BMI.S	OK1
	MOVE.W	#$358,(A4)
OK1:	MOVE.W	(A4),6(A5)
	RTS
PITCHUP:BSR.S	NEWROU
	CLR.L	D0
	MOVE.B	3(A6),D0
	AND.B	#$F,D0
	SUB.W	D0,(A4)
	CMP.W	#$71,(A4)
	BPL.S	OK2
	MOVE.W	#$71,(A4)
OK2:	MOVE.W	(A4),6(A5)
	RTS
SETVOL:	MOVE.B	3(A6),8(A5)
	RTS
SETFILT:MOVE.B	3(A6),D0
	AND.B	#1,D0
	LSL.B	#1,D0
	AND.B	#$FD,$BFE001
	OR.B	D0,$BFE001
	RTS
SETSPEED:
	CLR.L	D0
	MOVE.B	3(A6),D0
	AND.B	#$F,D0
	MOVE.W	D0,SPEED+2
	RTS
NEWROU:	CMP.L	#DATACH0,A6
	BNE.S	NEXT1
	LEA	VOI1(PC),A4
	RTS
NEXT1:	CMP.L	#DATACH1,A6
	BNE.S	NEXT2
	LEA	VOI2(PC),A4
	RTS
NEXT2:	CMP.L	#DATACH2,A6
	BNE.S	NEXT3
	LEA	VOI3(PC),A4
	RTS
NEXT3:	LEA	VOI4(PC),A4
	RTS
REPLAYSTEP:				;** WORK NEXT PATTERN-STEP
	CLR.W	TIMPOS
	MOVE.L	MUZAKOFFSET,A0
	MOVE.L	A0,A3
	ADD.L	#12,A3			;PTR TO SOUNDPREFS
	MOVE.L	A0,A2
	ADD.L	#472,A2			;PTR TO PATTERN-TABLE
	ADD.L	#600,A0			;PTR TO FIRST PATTERN
	CLR.L	D1
	MOVE.L	TRKPOS,D0		;GET PTR TO CURRENT PATTERN
	MOVE.B	(A2,D0),D1
	LSL.L	#8,D1
	LSL.L	#2,D1
	ADD.L	PATPOS,D1		;GET PTR TO CURRENT STEP
	CLR.W	ENBITS
	LEA	$DFF0A0,A5		;CHANEL 0
	LEA	DATACH0(PC),A6
	BSR.L	CHANELHANDLER
	LEA	$DFF0B0,A5		;CHANEL 1
	LEA	DATACH1(PC),A6
	BSR.L	CHANELHANDLER
	LEA	$DFF0C0,A5		;CHANEL 2
	LEA	DATACH2(PC),A6
	BSR.L	CHANELHANDLER
	LEA	$DFF0D0,A5		;CHANEL 3
	LEA	DATACH3(PC),A6
	BSR.L	CHANELHANDLER
	MOVE.W	#400,D0			;** WAIT A WHILE AND SET LEN
REP1:	DBF	D0,REP1			;   OF ONESHOT TO 1 WORD
	MOVE.W	#$8000,D0
	OR.W	ENBITS,D0
	MOVE.W	D0,$DFF096
	CMP.W	#1,DATACH0+14
	BNE.S	REP2
	CLR.W	DATACH0+14
	MOVE.W	#1,$DFF0A4
REP2:	CMP.W	#1,DATACH1+14
	BNE.S	REP3
	CLR.W	DATACH1+14
	MOVE.W	#1,$DFF0B4
REP3:	CMP.W	#1,DATACH2+14
	BNE.S	REP4
	CLR.W	DATACH2+14
	MOVE.W	#1,$DFF0C4
REP4:	CMP.W	#1,DATACH3+14
	BNE.S	REP5
	CLR.W	DATACH3+14
	MOVE.W	#1,$DFF0D4
REP5:	ADD.L	#16,PATPOS		;NEXT STEP
	CMP.L	#64*16,PATPOS		;PATTERN FINISHED ?
	BNE.S	REP6
	CLR.L	PATPOS
	ADDQ.L	#1,TRKPOS		;NEXT PATTERN IN TABLE
	CLR.L	D0
	MOVE.W	NUMPAT,D0
	CMP.L	TRKPOS,D0		;SONG FINISHED ?
	BNE.S	REP6
	CLR.L	TRKPOS
REP6:	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS
CHANELHANDLER:
	MOVE.L	(A0,D1.L),(A6)		;GET PERIOD & ACTION-WORD
	ADDQ.L	#4,D1			;POINT TO NEXT CHANEL
	CLR.L	D2
	MOVE.B	2(A6),D2		;GET NIBBLE FOR SOUNDNUMBER
	LSR.B	#4,D2
	BEQ.S	CHAN2			;NO SOUNDCHANGE !
	MOVE.L	D2,D4			;** CALC PTR TO SAMPLE
	LSL.L	#2,D2
	MULU	#30,D4
	LEA	POINTERS-4(PC),A1
	MOVE.L	(A1,D2.L),4(A6)		;STORE SAMPLE-ADDRESS
	MOVE.W	(A3,D4.L),8(A6)		;STORE SAMPLE-LEN IN WORDS
	MOVE.W	2(A3,D4.L),18(A6)	;STORE SAMPLE-VOLUME
	MOVE.L	D0,-(A7)
	MOVE.B	2(A6),D0
	AND.B	#$F,D0
	CMP.B	#$C,D0
	BNE.S	OK3
	MOVE.B	3(A6),8(A5)
	BRA.S	OK4
OK3:	MOVE.W	2(A3,D4.L),8(A5)	;CHANGE CHANEL-VOLUME
OK4:	MOVE.L	(A7)+,D0
	CLR.L	D3
	MOVE.W	4(A3,D4),D3		;** CALC REPEATSTART
	ADD.L	4(A6),D3
	MOVE.L	D3,10(A6)		;STORE REPEATSTART
	MOVE.W	6(A3,D4),14(A6)		;STORE REPEATLENGTH
	CMP.W	#1,14(A6)
	BEQ.S	CHAN2			;NO SUSTAINSOUND !
	MOVE.L	10(A6),4(A6)		;REPSTART  = SNDSTART
	MOVE.W	6(A3,D4),8(A6)		;REPLENGTH = SNDLENGTH
CHAN2:	TST.W	(A6)
	BEQ.S	CHAN4			;NO NEW NOTE SET !
	MOVE.W	22(A6),$DFF096		;CLEAR DMA
	TST.W	14(A6)
	BNE.S	CHAN3			;NO ONESHOT-SAMPLE
	MOVE.W	#1,14(A6)		;ALLOW RESUME (LATER)
CHAN3:	BSR.L	NEWROU
	MOVE.W	(A6),(A4)
	MOVE.W	(A6),16(A6)		;SAVE NOTE FOR EFFECT
	MOVE.L	4(A6),0(A5)		;SET SAMPLESTART
	MOVE.W	8(A6),4(A5)		;SET SAMPLELENGTH
	MOVE.W	(A6),6(A5)		;SET PERIOD
	MOVE.W	22(A6),D0
	OR.W	D0,ENBITS		;STORE DMA-BIT
	MOVE.W	18(A6),20(A6)		;VOLUME TRIGGER
CHAN4:	RTS
DATACH0:	BLK.W	11,0
		DC.W	1
DATACH1:	BLK.W	11,0
		DC.W	2
DATACH2:	BLK.W	11,0
		DC.W	4
DATACH3:	BLK.W	11,0
		DC.W	8
VOI1:		DC.W	0
VOI2:		DC.W	0
VOI3:		DC.W	0
VOI4:		DC.W	0
POINTERS:	BLK.L	15,0
NOTETABLE:	DC.W	856,808,762,720,678,640,604,570
		DC.W	538,508,480,453,428,404,381,360
		DC.W	339,320,302,285,269,254,240,226  
		DC.W	214,202,190,180,170,160,151,143
		DC.W	135,127,120,113,000
MUZAKOFFSET:	DC.L	0
TRKPOS:		DC.L	0
PATPOS:		DC.L	0
NUMPAT:		DC.W	0
ENBITS:		DC.W	0
TIMPOS:		DC.W	0

;----------------------------------
; DONNEES,DATAS,VARIABLES,TABLES...
;----------------------------------

GFXNAME:
DC.B "graphics.library",0
TEXTE:
;DC.B 'A=VITESSE LENTE   B=VITESSE RAPIDE    S+ESPACE=STOP'
DC.B ' the great swappers S '
DC.B 'are back on your screen.  credits for this great intro. '
DC.B '    coding @ ritchy  S '
DC.B '  graphics @ overkyl S  '
DC.B '  music @ rogue male S  '
DC.B '  charsets @ lucyfer S ' 
DC.B 'B                      '
DC.B 'A the greetings fallowing in a - z order.    '
DC.B 'avenger  -  acu  -  bs1  -  brainstorm  ( yo scattergold )  -  '
DC.B 'd mod  -  digitech  -  dragons  ( hi foxy )  -  disknet  ( hello '
DC.B 'triax )  -  equinox  -  fraxion  -  g.o.t.  -  iron eagle crew '
DC.B ' -  impact inc.  -  kefrens  -  master crew  ( my stamps captain'
DC.B ' )  -  paranoimia  -  rebels  -  supplex  -  subsoftware  -  '
DC.B 'sunstar  -  tarkus team  -  tetragon  ( yo jbm )  -  unique  -  '
DC.B 'vision  -  vision factory and all we forgotten ...............'
DC.B '............  '    
DC.B 'A                     '
DC.B ' ritchy will send some hellos to some friends of him...'
DC.B '    B                  A  - dd from spider - chaos from '
DC.B 'alcatraz - kamikaze - zorglub - ninja -                     '
DC.B 'personnal message from speedman...    to mace of unique '
DC.B '         B       hey man.      S send back my disks S    '
DC.B '                  A '
DC.B 'ok now its  @ lucyfer !  typing.  hey you captain carlsberg'
DC.B ' send back my stamps next time ok.  yo brainstorm are you dead'
DC.B ' ?????'
DC.B 'B                           '
DC.B 'A ok now thats all folks and never forgot '
DC.B '      just crack      S '     
DC.B '  well do the rest  S '
DC.B '  see ya soon guys ..........................................'
DC.B '............ dam si emal .......................'
DC.B '                     '
FINTEXTE:
EVEN

ESPACEMENT:
DC.W 15
VITESSE:
DC.W $F9F0
TEMPS:
DC.B $000F
EVEN
GFXBASE:
DC.L 0
OLDCOPPER:
DC.L 0

POINTEURTEXTE:
DC.L TEXTE
; ! = <-       @ = -> 
TABLE:
DC.W "a",$0000,"b",$0002,"c",$0004,"d",$0006,"e",$0008,"f",$000a
DC.W "g",$000c,"h",$000e,"i",$0010,"j",$0012,"k",$0014,"l",$0016
DC.W "m",$0018,"n",$001a,"o",$001c,"p",$001e,"q",$0020,"r",$0022
DC.W "s",$0024,"t",$0026

DC.W "u",$0258,"v",$025a,"w",$025c,"x",$025e
DC.W "y",$0260,"z",$0262,"0",$0264,"1",$0266,"2",$0268,"3",$026A
DC.W "4",$026C,"5",$026E,"6",$0270,"7",$0272,"8",$0274,"9",$0276
DC.W "(",$0278,")",$027A,"?",$027C,"@",$027E

DC.W '!',$04B0,"-",$04B2,".",$04B4," ",$04B6


;=================================================================
;>                          COPPERLIST                           <
;=================================================================
NEWCOPPER:
DC.W $008E,$2981		; DWISTRT (H129,V41)
DC.W $0090,$29C1                ; DWISTOP (H449,V297)
DC.W $0092,$0038		; DFFSTRT
DC.W $0094,$00D0		; DFFSTOP
DC.W $00E0,$0006		; POINTEUR BITPLAN 1
DC.W $00E2,$0000
DC.W $00E4,$0006		; POINTEUR BITPLAN 2
DC.W $00E6,$3390
DC.W $00E8,$0006		; POINTEUR BITPLAN 3
DC.W $00EA,$6720
DC.W $00EC,$0006		; POINTEUR BITPLAN 4
DC.W $00EE,$9AB0
DC.W $00F0,$0006		; POINTEUR BITPLAN 5
DC.W $00F2,$CE40
DC.W $0100,$5200		; BLTCON 0
DC.W $0108,$0004
DC.W $010A,$0004
DC.W $0102,$0000
DC.W $0120,$0005,$0122,$0000	; POINTEUR (SPRITE 0)
DC.W $0124,$0005,$0126,$2C00	; POINTEUR (SPRITE 1)
DC.W $0128,$0005,$012A,$5800	; POINTEUR (SPRITE 2)
DC.W $012C,$0005,$012E,$8400	; PS3
DC.W $0130,$0005,$0132,$B000	; PS4
DC.W $0134,$0005,$0136,$1600	; PS5 !!!
DC.W $0138,$0005,$013A,$7E00	; PS6 !
DC.W $013C,$0005,$013E,$4200	; PS7 (8 SPRITES !)
DC.W $0180,$0000		; REGISTRES COULEURS
DC.W $0182,$0DFD
DC.W $0184,$0BFC
DC.W $0186,$08F8
DC.W $0188,$03F7
DC.W $018A,$00E0
DC.W $018C,$00C0
DC.W $018E,$0090
;DC.W $0190,$0F00		; BLITTER ?
DC.W $0192,$0333
DC.W $0194,$0666
DC.W $0196,$0555
DC.W $0198,$0666
DC.W $019A,$0777
DC.W $019C,$0888
DC.W $019E,$0999

DC.W $01A0,$0000
DC.W $01A2,$0FFF
DC.W $01A4,$0F00
DC.W $01A6,$0800
DC.W $01A8,$0000
DC.W $01AA,$0FFF
DC.W $01AC,$0F00
DC.W $01AE,$0800
DC.W $01B0,$0000
DC.W $01B2,$0FFF
DC.W $01B4,$0F00
DC.W $01B6,$0800
DC.W $01B8,$0000
DC.W $01BA,$0FFF
DC.W $01BC,$0F00
DC.W $01BE,$0800

DC.W $1B0F,$FFFE,$180,$000
DEBUTCOLORS:			; DERNIERE COLONNE : COUL.INITIALES
DC.W $360F,$FFFE,$190,$055
DC.W $370F,$FFFE,$190,$377
DC.W $380F,$FFFE,$190,$588
DC.W $390F,$FFFE,$190,$799
DC.W $3A0F,$FFFE,$190,$9AA
DC.W $3B0F,$FFFE,$190,$BBB
DC.W $3C0F,$FFFE,$190,$420
DC.W $3D0F,$FFFE,$190,$530
DC.W $3E0F,$FFFE,$190,$640
DC.W $3F0F,$FFFE,$190,$750
DC.W $400F,$FFFE,$190,$860
DC.W $410F,$FFFE,$190,$970
DC.W $420F,$FFFE,$190,$A80
DC.W $430F,$FFFE,$190,$B90
FINCOLORS:
DC.W $440F,$FFFE,$190,$000

DC.W $FFFF,$FFDE			; PASSE SOUS 255

DC.W $1A0F,$FF00,$186,$00F,$0182,$0555,$0184,$0AAA
DC.W $1B0F,$FF00,$186,$00E
DC.W $1C0F,$FF00,$186,$00D
DC.W $1D0F,$FF00,$186,$00C
DC.W $1E0F,$FF00,$186,$00B
DC.W $1F0F,$FF00,$186,$00A
DC.W $200F,$FF00,$186,$009
DC.W $210F,$FF00,$186,$008
DC.W $220F,$FF00,$186,$007
DC.W $230F,$FF00,$186,$006
DC.W $240F,$FF00,$186,$005
DC.W $250F,$FF00,$186,$004
DC.W $260F,$FF00,$186,$003
DC.W $270F,$FF00,$186,$002
DC.W $280F,$FF00,$186,$001
DC.W $290F,$FF00,$186,$000

DC.W $380F,$FF00,$180,$000

COPPERLISTFIN:

STOP2:
DC.L 0

SPRITE:
DC.W $6D60,$7200		; VSTART,HSTART,VSTOP

DC.W $07C0,$07C0
DC.W $1FF0,$1FF0
DC.W $39F8,$3FF8
DC.W $71FC,$7FFC
DC.W $63FC,$7FFC
DC.W $E7FA,$FFFE
DC.W $FFFA,$FFFE
DC.W $FFF2,$FFFE
DC.W $FFF2,$FFFE
DC.W $FFE2,$FFFE
DC.W $7FC4,$7FFC
DC.W $7F84,$7FFC
DC.W $3E08,$3FF8
DC.W $1830,$1FF0
DC.W $07C0,$07C0
DC.W $0000,$0000
DC.W $0000,$0000

PTABLEXY:
DC.L TABLEXY
TABLEXY: BLK.B 2942
FINTABLEXY:
FONTIM:
BLK.B 3600
PICTURE:
BLK.B 37920
MUSIC:
BLK.B 51020
FININTRO:
